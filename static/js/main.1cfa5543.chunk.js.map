{"version":3,"sources":["assets/merchant-portal.png","assets/gem.png","assets/brain-dumpster.png","assets/the-siren.png","assets/wedding-invitation-web.png","components/Card/index.js","App.js","serviceWorker.js","index.js"],"names":["CardWrapper","Styled","div","Card","props","src","description","title","className","homepage","cx","onClick","window","open","alt","COLOR_COVER","Nav","Cover","OuterSection","InnerSection","Separator","Section","children","App","projects","merchantPortal","gem","href","target","rel","brainDumpster","theSiren","weddingInvitation","id","company","companyHomepage","time","map","data","i","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cfa5543.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/merchant-portal.5dac9969.png\";","export default __webpack_public_path__ + \"static/media/gem.4348f224.png\";","export default __webpack_public_path__ + \"static/media/brain-dumpster.4c349138.png\";","export default __webpack_public_path__ + \"static/media/the-siren.69ee4396.png\";","export default __webpack_public_path__ + \"static/media/wedding-invitation-web.d668f3e0.png\";","import React from \"react\";\nimport Styled from \"styled-components\";\nimport cx from \"classnames\";\n\nconst CardWrapper = Styled.div`\n  max-width: 500px;\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  .image-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 328px;\n    background-color: #18121e;\n  }\n`;\n\nconst Card = (props) => {\n  const { src, description, title, className, homepage } = props;\n  return (\n    <CardWrapper className={cx(className, \"card\")}>\n      <button\n        className=\"no-style\"\n        onClick={() => window.open(homepage, \"_blank\")}\n      >\n        <div className=\"image-wrapper\">\n          <img className=\"card-img-top\" src={src} alt=\"Project Preview\" />\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text\">{description}</p>\n        </div>\n      </button>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Styled from \"styled-components\";\n\nimport merchantPortal from \"./assets/merchant-portal.png\"\nimport gem from \"./assets/gem.png\";\nimport brainDumpster from \"./assets/brain-dumpster.png\";\nimport theSiren from \"./assets/the-siren.png\";\nimport weddingInvitation from \"./assets/wedding-invitation-web.png\";\nimport Card from \"./components/Card\";\n\nconst COLOR_NAV = '#f9f0e0'\nconst COLOR_NAV_HOVER = '#eac67a'\nconst COLOR_COVER = '#212020'\n\nconst Nav = Styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 20px 40px;\n  font-family: 'Raleway', sans-serif;\n  font-weight: 600;\n  background-color: #3d7475;\n\n  .menu-bar {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    max-width: 2000px;\n    flex-basis: 500px;\n\n    a {\n      color: ${COLOR_NAV};\n      text-decoration: none;\n    }\n\n    a:hover {\n      color: ${COLOR_NAV_HOVER}\n    }\n\n    .main {\n      font-weight: 800;\n      margin-right: 25px;\n    }\n  }\n`;\n\nconst Cover = Styled.div`\n  background: #479c9d;\n  display: flex;\n  position: relative;\n\n  .inner-cover {\n    margin: 0 auto;\n    width: 100%;\n    max-width: 1214px;\n  }\n\n  .body-wrapper {\n    margin-top: 30px;\n    color: ${COLOR_COVER};\n    font-size: 35px;\n\n    @media only screen and (max-width: 400px) {\n      margin-top: 10px;\n    }\n  }&#128526;\n\n  .content {\n    margin: 32px;\n    margin-left: 60px;\n    font-size: 4rem;\n\n    @media only screen and (max-width: 768px) {\n      margin-left: 32px;\n    }\n\n    @media only screen and (max-width: 532px) {\n      font-size: 3rem;\n    }\n\n    @media only screen and (max-width: 416px) {\n      font-size: 2.1rem;\n      margin: 20px;\n    }\n  }\n\n  .text-title {\n    font-family: 'Raleway', sans-serif;\n    font-weight: 600;\n    color: ${COLOR_COVER};\n  }\n\n  .profile {\n    font-size: 1.8rem;\n    @media only screen and (max-width: 532px) {\n      font-size: 1.5rem;\n    }\n    @media only screen and (max-width: 416px) {\n      font-size: 1.2rem;\n    }\n  }\n`;\n\nconst OuterSection = Styled.div``\n\nconst InnerSection = Styled.div`\n  margin: 20px;\n  * * {\n    color: #3d3b3b;\n  }\n\n  .project-wrapper {\n    margin: 0 auto;\n    width: 100%;\n    max-width: 1214px;\n  }\n\n  .title {\n    font-family: 'Raleway', sans-serif;\n    margin-left: 40px;\n    margin-top: 50px;\n\n    h1 {\n      border-bottom: 2px solid;\n      padding-bottom: 4px;\n      font-size: 2.5rem;\n      font-weight: 600;\n    }\n\n    @media only screen and (max-width: 532px) {\n      font-size: 40px;\n      margin-left: 0;\n      text-align: center;\n\n      h1 {\n        font-size: 2.3rem;\n        font-weight: 600;\n      }\n    }\n\n    @media only screen and (max-width: 416px) {\n      h1 {\n        font-size: 2rem;\n      }\n    }\n  }\n\n  .project-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n\n  .experience-container {\n    margin-left: 40px;\n    @media only screen and (max-width: 532px) {\n      margin-left: 0;\n    }\n  }\n\n  div {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Separator = Styled.div`\n  height: 50px;\n  width: 100%;\n  background: #6eb5aa;\n`\n\nconst Section = ({ children }) => (\n  <OuterSection>\n    <InnerSection>\n      {children}\n    </InnerSection>\n  </OuterSection>\n)\n\nclass App extends Component {\n  render() {\n    const projects = [\n      {\n        title: \"DANA - Merchant Portal\",\n        description: (\n          <span>\n            Dashboard application for DANA's merchant or merchant that want to\n            join DANA by using onboarding process.\n          </span>\n        ),\n        homepage: \"https://dashboard.dana.id/\",\n        src: merchantPortal,\n      },\n      {\n        title: \"GOERS Event Manager\",\n        description: (\n          <span>\n            Event management application that my team and I developed when I had\n            an internship at GOERS. Build using React, Redux, Boostsrap, and\n            Styled-Components.\n          </span>\n        ),\n        homepage: \"https://gem.goersapp.com/\",\n        src: gem,\n      },\n      {\n        title: \"Brain Dumpster\",\n        description: (\n          <span>\n            Web app for writing. Inspired by{\" \"}\n            <a href=\"https://750words.com/\" target=\"_blank\" rel=\"noreferrer\">\n              750words.com\n            </a>\n            . Built using ReactJs, and Material UI. Using{\" \"}\n            <a\n              href=\"https://github.com/localForage/localForage\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              localForage\n            </a>{\" \"}\n            library for storing data. This one I use personally when I have a\n            lot in my mind and just want to dump the \"trash\" in my brain into\n            writing :D\n          </span>\n        ),\n        homepage: \"https://vigorakbar.github.io/brain-dumpster\",\n        src: brainDumpster,\n      },\n      {\n        title: \"The Siren\",\n        description: (\n          <span>\n            Implementation of one-page blog/magazine design concept. It's just a\n            part of the page. I downloaded a sketch design and expired the free\n            version before I finished the whole design haha. Built using React.\n            Started learning to use React Hooks with this one!\n          </span>\n        ),\n        homepage: \"https://vigorakbar.github.io/the-siren/\",\n        src: theSiren,\n      },\n      {\n        title: \"Wedding Invitation\",\n        description: (\n          <span>\n            My very first personal project! Built for my brother wedding\n            ceremony. I built this using jQuery and{\" \"}\n            <a\n              href=\"https://michalsnik.github.io/aos/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              AOS\n            </a>{\" \"}\n            library for the scroll animation. I learned to deploy project to AWS\n            when working in this project.\n          </span>\n        ),\n        homepage: \"https://vigorakbar.github.io/wedding-invitation-web/\",\n        src: weddingInvitation,\n      },\n    ];\n\n    const experience = [\n      {\n        company: \"DANA Indonesia\",\n        companyHomepage: \"https://www.dana.id/\",\n        title: \"Associate Software Development Engineer\",\n        time: \"(Nov 2019 - Present)\",\n      },\n      {\n        company: \"Surya Teknologi Nasional\",\n        companyHomepage: \"https://suryateknologi.co.id/\",\n        title: \"Frontend Engineer\",\n        time: \"(May 2019 - Oct 2019)\",\n      },\n      {\n        company: \"eDaun Inspirasi Dijital\",\n        companyHomepage: \"https://www.edaun.com/\",\n        title: \"Web Developer Part Time\",\n        time: \"(Nov 2018 - Mar 2019)\",\n      },\n      {\n        company: \"Goers\",\n        companyHomepage: \"https://www.goersapp.com/\",\n        title: \"Web Developer Internship\",\n        time: \"(May 2018 - Sep 2018)\",\n      },\n      {\n        company: \"Intelix Global Crossing\",\n        companyHomepage: \"https://ecentrix.co.id/\",\n        title: \"Software Engineer Part Time\",\n        time: \"(Nov 2017 - Apr 2018)\",\n      },\n    ];\n    return (\n      <div>\n        <Nav>\n          <div className=\"menu-bar\">\n            <a href=\"#projects\">PROJECTS</a>\n            <a href=\"#cv\">CV</a>\n            <a href=\"#contact\">CONTACT</a>\n          </div>\n        </Nav>\n        <Cover>\n          <div className=\"inner-cover\">\n            <div className=\"content\">\n              <div className=\"text-title\">\n                Hi! 👋, <br /> I'm Vigor Akbar\n              </div>\n              <div className=\"body-wrapper\">\n                <p className=\"profile\">\n                  I'm a software engineer with interest in web development\n                </p>\n              </div>\n            </div>\n          </div>\n        </Cover>\n        <Separator />\n        <Section id=\"cv\">\n          <div className=\"project-wrapper\">\n            <div className=\"title\">\n              <h1>Experience</h1>\n            </div>\n            <div className=\"experience-container\">\n              {experience.map((data, i) => (\n                <div key={i}>\n                  <h5>{data.title}</h5>\n                  <h6>\n                    <a\n                      href={data.companyHomepage}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {data.company}\n                    </a>{\" \"}\n                    {data.time}\n                  </h6>\n                </div>\n              ))}\n              <div>\n                <br />\n                <h4>\n                  Let's connect on{\" \"}\n                  <a\n                    href=\"https://www.linkedin.com/in/vigorakbar/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    LinkedIn\n                  </a>\n                  !\n                </h4>\n              </div>\n            </div>\n          </div>\n        </Section>\n        <Separator />\n        <Section id=\"projects\">\n          <div className=\"project-wrapper\">\n            <div className=\"title\">\n              <h1>Projects</h1>\n            </div>\n            <div className=\"project-container\">\n              {projects.map((props, i) => (\n                <Card key={i} {...props} />\n              ))}\n            </div>\n          </div>\n        </Section>\n        <Separator />\n        <Section id=\"contact\">\n          <div className=\"project-wrapper\">\n            <div className=\"title\">\n              <h1>Contact</h1>\n            </div>\n            <div className=\"experience-container\">\n              <h4>You can contact me anytime!</h4>\n              <h5>\n                Email:{\" \"}\n                <a href=\"mailto:vigorakbar@gmail.com\">vigorakbar@gmail.com</a>\n              </h5>\n              <h5>\n                Linkedin:{\" \"}\n                <a\n                  href=\"https://www.linkedin.com/in/vigorakbar/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  linkedin.com/in/vigorakbar/\n                </a>\n              </h5>\n            </div>\n          </div>\n        </Section>\n        <Separator />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}